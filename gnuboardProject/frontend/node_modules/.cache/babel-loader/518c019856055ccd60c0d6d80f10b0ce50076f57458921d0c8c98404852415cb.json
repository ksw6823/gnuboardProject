{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\\\uC0B0\\uD559 \\uD074\\uB860\\\\gnuboardProject\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from '../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const fetchUser = async () => {\n    try {\n      const response = await axios.get('/auth/profile');\n      setUser(response.data);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('사용자 정보를 불러오는데 실패했습니다:', error);\n      logout();\n    }\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      fetchUser();\n    }\n  }, []);\n  const login = async (email, password) => {\n    const response = await axios.post('/auth/login', {\n      username: email,\n      password\n    });\n    const {\n      access_token\n    } = response.data;\n    localStorage.setItem('token', access_token);\n    axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n    await fetchUser();\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const register = async (email, password, name) => {\n    await axios.post('/auth/register', {\n      email,\n      password,\n      name\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Cix+uXOU60jwVTrRl9ss+REDA3M=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","fetchUser","response","get","data","error","console","logout","token","localStorage","getItem","defaults","headers","common","login","email","password","post","username","access_token","setItem","removeItem","register","name","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/산학 클론/gnuboardProject/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from '../api/axios';\n\ninterface User {\n  id: number;\n  username: string;\n  name: string;\n  email: string;\n  isAdmin: boolean;\n}\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  user: User | null;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n  register: (email: string, password: string, name: string) => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  const fetchUser = async () => {\n    try {\n      const response = await axios.get('/auth/profile');\n      setUser(response.data);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('사용자 정보를 불러오는데 실패했습니다:', error);\n      logout();\n    }\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      fetchUser();\n    }\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    const response = await axios.post('/auth/login', { username: email, password });\n    const { access_token } = response.data;\n    localStorage.setItem('token', access_token);\n    axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n    await fetchUser();\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  const register = async (email: string, password: string, name: string) => {\n    await axios.post('/auth/register', { email, password, name });\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, user, login, logout, register }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}